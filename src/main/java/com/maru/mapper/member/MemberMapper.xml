<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="com.maru.mapper.member.MemberMapper">
 
 	<!-- 회원가입 -->
	<insert id="insert">
		INSERT INTO member 
			(userId, name, password, email)
		VALUES
			(#{userId}, #{name}, #{password}, #{email})
	</insert>
	
	<!-- 전체 회원 수 -->
<!-- 	<select id="selectAllMemberCount" resultType="int">
	 	SELECT COUNT(*)
	 	FROM member
	 	WHERE
		<trim prefixOverrides="OR">
			<if test="type == 'all' or type == 'userId'">
 			OR userId LIKE #{keyword}
			</if>
			<if test="type == 'all' or type == 'name'">
 			OR name LIKE #{keyword}
			</if>
		</trim>
 	</select> -->
	
	<!-- 모든 회원정보 List로 가져오기 , 페이지네이션 & 검색 기능 추가 -->
 	<select id="selectMemberList" resultType="com.maru.domain.member.MemberDto">
 		SELECT 
	 		userId,
	 		name,
	 		'숨김' password,
	 		email
	 	FROM
	 		member
	 	ORDER BY
	 		userId
 	</select>
 	
<!--  	<select id="selectMemberList" resultMap="memberListMap">
	 	SELECT 
	 		userId,
	 		name,
	 		'숨김' password,
	 		email
	 	FROM
	 		member
	 	WHERE
	 		<trim prefixOverrides="OR">
	 			<if test="type == 'all' or type == 'userId'">
	 			OR userId LIKE #{keyword}
	 			</if>
	 			<if test="type == 'all' or type == 'name'">
	 			OR name LIKE #{keyword}
	 			</if>
	 		</trim>
	 	ORDER BY name
	 	LIMIT #{offset}, #{records}
 	</select>
 	<resultMap type="com.maru.domain.member.MemberDto" id="memberListMap">
 		<id column="userId" property="userId" />
 		<result column="name" property="name" />
 		<result column="password" property="password" />
 		<result column="email" property="email" />
 	</resultMap> -->
 	
 	<select id="selectById" resultMap="memberMap">
 		SELECT 
	 		userId,
	 		name,
	 		password,
	 		email,
	 		a.auth
	 	FROM
	 		member m LEFT JOIN authority a ON m. userId = a.memberId
	 	WHERE
	 	 userId = #{userId}
 	</select>
 	<resultMap type="com.maru.domain.member.MemberDto" id="memberMap">
 		<id column="userId" property="userId" />
 		<result column="name" property="name" />
 		<result column="password" property="password" />
 		<result column="email" property="email" />
 		<collection property="auth" ofType="string">
 			<result column="auth" property="auth" />
 		</collection>
 	</resultMap>

 	<select id="selectByEmail" resultType="com.maru.domain.member.MemberDto">
 		SELECT 
	 		userId,
	 		name,
	 		password,
	 		email
	 	FROM
	 		member
	 	WHERE
	 	 email = #{email}
 	</select>
 	
 	<update id="update">
 		UPDATE member
 		SET
 			<if test="password != null">
 			password = #{password},
 			</if>
 			email = #{email}
 		WHERE
 			userId = #{userId}
 	</update>
 	
 	<delete id="deletById">
	 	DELETE FROM member
		WHERE 
			userId = #{userId}
 	</delete>
 	
 	
 
 </mapper>